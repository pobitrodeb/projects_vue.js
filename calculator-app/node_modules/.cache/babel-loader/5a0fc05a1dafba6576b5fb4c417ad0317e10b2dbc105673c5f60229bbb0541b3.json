{"ast":null,"code":"export default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      output: '',\n      previousVlaue: null,\n      operationFired: false\n    };\n  },\n  methods: {\n    clearFiled() {\n      this.output = '';\n    },\n    setNegativeOrPositive() {\n      this.output = this.output[0] === '-' ? this.output.slice(1) : `-${this.output}`;\n    },\n    calculatePercentage() {\n      this.output = parseFloat(this.output) / 100;\n    },\n    getNumber(number) {\n      if (this.operationFired) {\n        this.output = '';\n        this.operationFired = false;\n      }\n      this.output = `${this.output}${number}`;\n      // console.log(this.output);\n    },\n\n    getDot() {\n      if (this.output.indexOf('.') === -1) {\n        this.output = this.output + '.';\n      }\n    },\n    proecessOutput(string) {\n      if (string === 'add') {\n        this.operation = (a, b) => {\n          return parseFloat(a) + parseFloat(b);\n        };\n      } else if (string == 'subtract') {\n        this.operation = (a, b) => {\n          return parseFloat(a) - parseFloat(b);\n        };\n      } else if (string === 'multiply') {\n        this.operation = (a, b) => {\n          return parseFloat(a) * parseFloat(b);\n        };\n      } else if (string == 'divide') {\n        this.operation = (a, b) => {\n          return parseFloat(a) / parseFloat(b);\n        };\n      }\n      this.previousVlaue = this.output;\n      this.operationFired = true;\n    },\n    result() {\n      this.output = `${this.operation(this.previousVlaue, this.output)}`;\n      this.previousVlaue = null;\n    }\n  }\n};","map":{"version":3,"names":["name","props","msg","String","data","output","previousVlaue","operationFired","methods","clearFiled","setNegativeOrPositive","slice","calculatePercentage","parseFloat","getNumber","number","getDot","indexOf","proecessOutput","string","operation","a","b","result"],"sources":["F:\\calculator-app\\src\\components\\Calculator.vue"],"sourcesContent":["<template>\n\n.row\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  }, \n  data(){\n    return {\n      output : '', \n      previousVlaue: null,\n      operationFired: false,\n    }\n  }, \n  methods:{\n    clearFiled(){\n      this.output = '';\n    }, \n    setNegativeOrPositive(){\n        this.output = this.output[0] === '-' ? this.output.slice(1) : `-${this.output}`\n    }, \n    calculatePercentage(){\n        this.output = parseFloat(this.output)/100\n    }, \n    getNumber(number){\n      if(this.operationFired){\n        this.output = '';\n        this.operationFired = false\n      }\n\n      this.output = `${this.output}${number}`;\n      // console.log(this.output);\n    }, \n    getDot(){\n      if(this.output.indexOf('.') === -1){\n        this.output = this.output + '.';\n      }\n    },\n    proecessOutput(string){\n\n      if(string === 'add'){\n        this.operation = (a, b) => {\n          return parseFloat(a) + parseFloat(b) ; \n        }\n      }else if(string == 'subtract'){\n        this.operation = (a, b) => {\n          return parseFloat(a) - parseFloat(b) ; \n        }\n      }else if(string === 'multiply'){\n        this.operation = (a, b) => {\n          return parseFloat(a) * parseFloat(b) ; \n        }\n      }else if(string == 'divide'){\n        this.operation = (a, b) => {\n          return parseFloat(a) / parseFloat(b) ; \n        }\n      }\n     \n      this.previousVlaue = this.output;\n      this.operationFired = true;\n    },\n    result(){\n      this.output = `${this.operation(this.previousVlaue, this.output)}`;\n      this.previousVlaue = null; \n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n</style>\n"],"mappings":"AAMA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,MAAK,EAAI,EAAE;MACXC,aAAa,EAAE,IAAI;MACnBC,cAAc,EAAE;IAClB;EACF,CAAC;EACDC,OAAO,EAAC;IACNC,UAAUA,CAAA,EAAE;MACV,IAAI,CAACJ,MAAK,GAAI,EAAE;IAClB,CAAC;IACDK,qBAAqBA,CAAA,EAAE;MACnB,IAAI,CAACL,MAAK,GAAI,IAAI,CAACA,MAAM,CAAC,CAAC,MAAM,GAAE,GAAI,IAAI,CAACA,MAAM,CAACM,KAAK,CAAC,CAAC,IAAK,IAAG,IAAI,CAACN,MAAO;IAClF,CAAC;IACDO,mBAAmBA,CAAA,EAAE;MACjB,IAAI,CAACP,MAAK,GAAIQ,UAAU,CAAC,IAAI,CAACR,MAAM,CAAC,GAAC,GAAE;IAC5C,CAAC;IACDS,SAASA,CAACC,MAAM,EAAC;MACf,IAAG,IAAI,CAACR,cAAc,EAAC;QACrB,IAAI,CAACF,MAAK,GAAI,EAAE;QAChB,IAAI,CAACE,cAAa,GAAI,KAAI;MAC5B;MAEA,IAAI,CAACF,MAAK,GAAK,GAAE,IAAI,CAACA,MAAO,GAAEU,MAAO,EAAC;MACvC;IACF,CAAC;;IACDC,MAAMA,CAAA,EAAE;MACN,IAAG,IAAI,CAACX,MAAM,CAACY,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,EAAC;QACjC,IAAI,CAACZ,MAAK,GAAI,IAAI,CAACA,MAAK,GAAI,GAAG;MACjC;IACF,CAAC;IACDa,cAAcA,CAACC,MAAM,EAAC;MAEpB,IAAGA,MAAK,KAAM,KAAK,EAAC;QAClB,IAAI,CAACC,SAAQ,GAAI,CAACC,CAAC,EAAEC,CAAC,KAAK;UACzB,OAAOT,UAAU,CAACQ,CAAC,IAAIR,UAAU,CAACS,CAAC;QACrC;MACF,CAAC,MAAK,IAAGH,MAAK,IAAK,UAAU,EAAC;QAC5B,IAAI,CAACC,SAAQ,GAAI,CAACC,CAAC,EAAEC,CAAC,KAAK;UACzB,OAAOT,UAAU,CAACQ,CAAC,IAAIR,UAAU,CAACS,CAAC;QACrC;MACF,CAAC,MAAK,IAAGH,MAAK,KAAM,UAAU,EAAC;QAC7B,IAAI,CAACC,SAAQ,GAAI,CAACC,CAAC,EAAEC,CAAC,KAAK;UACzB,OAAOT,UAAU,CAACQ,CAAC,IAAIR,UAAU,CAACS,CAAC;QACrC;MACF,CAAC,MAAK,IAAGH,MAAK,IAAK,QAAQ,EAAC;QAC1B,IAAI,CAACC,SAAQ,GAAI,CAACC,CAAC,EAAEC,CAAC,KAAK;UACzB,OAAOT,UAAU,CAACQ,CAAC,IAAIR,UAAU,CAACS,CAAC;QACrC;MACF;MAEA,IAAI,CAAChB,aAAY,GAAI,IAAI,CAACD,MAAM;MAChC,IAAI,CAACE,cAAa,GAAI,IAAI;IAC5B,CAAC;IACDgB,MAAMA,CAAA,EAAE;MACN,IAAI,CAAClB,MAAK,GAAK,GAAE,IAAI,CAACe,SAAS,CAAC,IAAI,CAACd,aAAa,EAAE,IAAI,CAACD,MAAM,CAAE,EAAC;MAClE,IAAI,CAACC,aAAY,GAAI,IAAI;IAC3B;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}