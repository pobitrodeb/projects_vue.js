{"ast":null,"code":"export default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      output: '12'\n    };\n  },\n  methods: {\n    clearFiled() {\n      this.output = '';\n    },\n    setNegativeOrPositive() {\n      this.output = this.output[0] === '-' ? this.output.slice(1) : `-${this.output}`;\n    },\n    calculatePercentage() {\n      this.output = parseFloat(this.output) / 100;\n    },\n    getNumber(number) {\n      this.output = `$(this.output)$(this.number)`;\n    }\n  }\n};","map":{"version":3,"names":["name","props","msg","String","data","output","methods","clearFiled","setNegativeOrPositive","slice","calculatePercentage","parseFloat","getNumber","number"],"sources":["F:\\calculator-app\\src\\components\\Calculator.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n  {{ msg }}\n  </div>\n  <div class=\"col-md-6\">\n    <table class=\"table table-bordered\">\n  <thead >\n    <tr class=\"bg-primary text-white py-3\">\n      <th colspan=\"4\">\n        {{  output || 0  }}\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n\n    <tr>\n      <th scope=\"col\" v-on:click=\"clearFiled\">C</th>\n      <th scope=\"col\" v-on:click=\"setNegativeOrPositive\"><i class=\"fa-solid fa-plus\"></i> <i class=\"fa-solid fa-percent\"></i> <i class=\"fa-solid fa-minus\"></i></th>\n      <th scope=\"col\" v-on:click=\"calculatePercentage\"><i class=\"fa-solid fa-percent\"></i></th>\n      <th scope=\"col\"  class=\"bg-primary text-white\"> <div class=\"btn \"><i class=\"fa-solid fa-divide\"></i></div> </th>\n    </tr>\n\n    <tr>\n      <td v-on:click=\"getNumber('7')\">7</td>\n      <td v-on:click=\"getNumber('8')\">8</td>\n      <td v-on:click=\"getNumber('9')\">9</td>\n      <td class=\"bg-primary text-white\"><div class=\"btn\"> <i class=\"fa-solid fa-x\"></i> </div></td>\n      \n    </tr>\n\n    <tr>\n      <td v-on:click=\"getNumber('4')\">4</td>\n      <td v-on:click=\"getNumber('5')\">5</td>\n      <td v-on:click=\"getNumber('6')\">6</td>\n      <td class=\"bg-primary text-white\"> <div class=\"btn\"><i class=\"fa-solid fa-minus\"></i></div> </td>\n    </tr>\n\n    <tr>\n      <td v-on:click=\"getNumber('1')\">1</td>\n      <td v-on:click=\"getNumber('2')\">2</td>\n      <td v-on:click=\"getNumber('3')\">3</td>\n      <td class=\"bg-primary text-white\" > <div class=\"btn\"><i class=\"fa-solid fa-plus\"></i></div> </td>\n    </tr>\n\n    <tr>\n      <td colspan=\"2\" v-on:click=\"getNumber('0')\">0</td>\n      <td><i class=\"fa-solid fa-circle-dot\"></i></td>\n      <td class=\"bg-primary text-white\" > <div class=\"btn\">  <i class=\"fa-solid fa-equals\"></i></div> </td>\n    </tr>\n\n  </tbody>\n</table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  }, \n  data(){\n    return {\n      output : '12'\n    }\n  }, \n  methods:{\n    clearFiled(){\n      this.output = '';\n    }, \n    setNegativeOrPositive(){\n        this.output = this.output[0] === '-' ? this.output.slice(1) : `-${this.output}`\n    }, \n    calculatePercentage(){\n        this.output = parseFloat(this.output)/100\n    }, \n    getNumber(number){\n      this.output = `$(this.output)$(this.number)`\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n</style>\n"],"mappings":"AAwDA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,MAAK,EAAI;IACX;EACF,CAAC;EACDC,OAAO,EAAC;IACNC,UAAUA,CAAA,EAAE;MACV,IAAI,CAACF,MAAK,GAAI,EAAE;IAClB,CAAC;IACDG,qBAAqBA,CAAA,EAAE;MACnB,IAAI,CAACH,MAAK,GAAI,IAAI,CAACA,MAAM,CAAC,CAAC,MAAM,GAAE,GAAI,IAAI,CAACA,MAAM,CAACI,KAAK,CAAC,CAAC,IAAK,IAAG,IAAI,CAACJ,MAAO;IAClF,CAAC;IACDK,mBAAmBA,CAAA,EAAE;MACjB,IAAI,CAACL,MAAK,GAAIM,UAAU,CAAC,IAAI,CAACN,MAAM,CAAC,GAAC,GAAE;IAC5C,CAAC;IACDO,SAASA,CAACC,MAAM,EAAC;MACf,IAAI,CAACR,MAAK,GAAK,8BAA4B;IAC7C;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}